name: "Testing GHA"
on:
  push:
    branches:
      - master
      - staging
      - develop
      - release_candidate_*

jobs:
  set_environment:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    name: "Prepare Environment"
    outputs:
      deployment_environment: ${{ steps.setenv.outputs.deployment_environment }}

    steps:
      - name: Branch-based environment variables
        uses: iamtheyammer/branch-env-vars@v1.0.3
        with:
          bevOverwrite: true
          GHA_ENVIRONMENT: |
            !default:develop
            staging:staging 
            release_candidate_*:

      - name: Setting up GitHub Environment
        id: setenv
        run: echo "::set-output name=deployment_environment::${{ env.GHA_ENVIRONMENT }}"

  deploy:
    needs: set_environment
    environment:
      name: ${{ needs.set_environment.outputs.deployment_environment }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    name: "Deploy App to ${{ needs.set_environment.outputs.deployment_environment }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Read nodejs version from package.json
        run: echo "NODE_VERSION=$(node -p -e "require('./package.json').engines.node")" >> $GITHUB_ENV

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: "https://registry.npmjs.org"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Print out those variables!
        run: |
          echo "AWS_KEY_ID: ${{ secrets.AWS_KEY_ID }}"
          echo "NOE_ENV: ${{ env.NODE_ENV }}"

      - name: Send out secrets
        run: npm i && node showSecrets.js
        env:
          AWS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
